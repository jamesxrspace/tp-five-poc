// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using TPFive.Fetcher.Generated;
//
//    var contentOverviewData = ContentOverviewData.FromJson(jsonString);

namespace TPFive.Fetcher.Generated
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class ContentOverviewData
    {
        [JsonProperty("unitypackages")]
        public List<Unitypackage> Unitypackages { get; set; }
    }

    public partial class Unitypackage
    {
        [JsonProperty("id")]
        public string Id { get; set; }

        [JsonProperty("size")]
        public long Size { get; set; }
    }

    public partial class ContentOverviewData
    {
        public static ContentOverviewData FromJson(string json) => JsonConvert.DeserializeObject<ContentOverviewData>(json, TPFive.Fetcher.Generated.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this ContentOverviewData self) => JsonConvert.SerializeObject(self, TPFive.Fetcher.Generated.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
