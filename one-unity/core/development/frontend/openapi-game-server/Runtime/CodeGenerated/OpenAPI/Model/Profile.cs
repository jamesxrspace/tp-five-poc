/*
 * Server API - Login
 *
 * The Restful APIs of Login.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#pragma warning disable
using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace TPFive.OpenApi.GameServer.Model
{
    /// <summary>
    /// user profile
    /// </summary>
    public class Profile : IEquatable<Profile>
    {
        /// <summary>
        /// xrspace user id
        /// </summary>
        /// <value>xrspace user id</value>
        [JsonProperty(PropertyName = "xr_id")]
        public string XrId { get; set; }

        /// <summary>
        /// email
        /// </summary>
        /// <value>email</value>
        [JsonProperty(PropertyName = "email")]
        public string Email { get; set; }

        /// <summary>
        /// Gets or Sets IssuerResourceOwnerIds
        /// </summary>
        [JsonProperty(PropertyName = "issuer_resource_owner_ids")]
        public Dictionary<string, string> IssuerResourceOwnerIds { get; set; }

        /// <summary>
        /// username
        /// </summary>
        /// <value>username</value>
        [JsonProperty(PropertyName = "username")]
        public string Username { get; set; }

        /// <summary>
        /// nickname
        /// </summary>
        /// <value>nickname</value>
        [JsonProperty(PropertyName = "nickname")]
        public string Nickname { get; set; }

        /// <summary>
        /// is email verified
        /// </summary>
        /// <value>is email verified</value>
        [JsonProperty(PropertyName = "is_email_verified")]
        public bool IsEmailVerified { get; set; }

        public static bool operator ==(Profile left, Profile right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(Profile left, Profile right)
        {
            return !Equals(left, right);
        }

        /// <summary>
        /// Returns the JSON string presentation of the object.
        /// </summary>
        /// <returns>JSON string presentation of the object.</returns>
        public override string ToString()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented, JsonUtils.ToStringJsonSerializerSettings);
        }

        /// <summary>
        /// Returns true if objects are equal.
        /// </summary>
        /// <param name="obj">Object to be compared.</param>
        /// <returns>Boolean.</returns>
        public override bool Equals(object obj)
        {
            if (obj is null)
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            return obj.GetType() == GetType() && Equals((Profile)obj);
        }

        /// <summary>
        /// Returns true if Profile instances are equal.
        /// </summary>
        /// <param name="other">Instance of Profile to be compared.</param>
        /// <returns>Boolean.</returns>
        public bool Equals(Profile other)
        {
            if (other is null)
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            return
                (
                    XrId == other.XrId ||
                    XrId != null &&
                    XrId.Equals(other.XrId)
                ) &&
                (
                    Email == other.Email ||
                    Email != null &&
                    Email.Equals(other.Email)
                ) &&
                (
                    IssuerResourceOwnerIds == other.IssuerResourceOwnerIds ||
                    IssuerResourceOwnerIds != null &&
                    other.IssuerResourceOwnerIds != null &&
                    IssuerResourceOwnerIds.SequenceEqual(other.IssuerResourceOwnerIds)
                ) && 
                (
                    Username == other.Username ||
                    Username != null &&
                    Username.Equals(other.Username)
                ) &&
                (
                    Nickname == other.Nickname ||
                    Nickname != null &&
                    Nickname.Equals(other.Nickname)
                ) &&
                (
                    IsEmailVerified == other.IsEmailVerified ||
                    
                    IsEmailVerified.Equals(other.IsEmailVerified)
                );
        }

        /// <summary>
        /// Gets the hash code.
        /// </summary>
        /// <returns>Hash code.</returns>
        public override int GetHashCode()
        {
            var hashCode = default(HashCode);

            hashCode.Add(XrId);
            hashCode.Add(Email);
            hashCode.Add(IssuerResourceOwnerIds);
            hashCode.Add(Username);
            hashCode.Add(Nickname);
            hashCode.Add(IsEmailVerified);

            return hashCode.ToHashCode();
        }
    }
}
#pragma warning restore