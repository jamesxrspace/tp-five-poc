/*
 * Server API - Space
 *
 * The Restful APIs of Space.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#pragma warning disable
using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace TPFive.OpenApi.GameServer.Model
{
    /// <summary>
    /// 
    /// </summary>
    public class SpaceGroup : IEquatable<SpaceGroup>
    {
        /// <summary>
        /// Gets or Sets SpaceGroupId
        /// </summary>
        [JsonProperty(PropertyName = "space_group_id")]
        public string SpaceGroupId { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets Thumbnail
        /// </summary>
        [JsonProperty(PropertyName = "thumbnail")]
        public string Thumbnail { get; set; }


        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum StatusEnum
        {
            /// <summary>
            /// Enum Enabled for enabled
            /// </summary>
            [EnumMember(Value = "enabled")]
            Enabled = 1,

            /// <summary>
            /// Enum Disabled for disabled
            /// </summary>
            [EnumMember(Value = "disabled")]
            Disabled = 2,
        }
        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public StatusEnum Status { get; set; }

        /// <summary>
        /// Gets or Sets StartAt
        /// </summary>
        [JsonProperty(PropertyName = "start_at")]
        public DateTime StartAt { get; set; }

        /// <summary>
        /// Gets or Sets EndAt
        /// </summary>
        [JsonProperty(PropertyName = "end_at")]
        public DateTime EndAt { get; set; }

        /// <summary>
        /// Gets or Sets Spaces
        /// </summary>
        [JsonProperty(PropertyName = "spaces")]
        public List<SpaceGroupSpacesInner> Spaces { get; set; }

        public static bool operator ==(SpaceGroup left, SpaceGroup right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(SpaceGroup left, SpaceGroup right)
        {
            return !Equals(left, right);
        }

        /// <summary>
        /// Returns the JSON string presentation of the object.
        /// </summary>
        /// <returns>JSON string presentation of the object.</returns>
        public override string ToString()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented, JsonUtils.ToStringJsonSerializerSettings);
        }

        /// <summary>
        /// Returns true if objects are equal.
        /// </summary>
        /// <param name="obj">Object to be compared.</param>
        /// <returns>Boolean.</returns>
        public override bool Equals(object obj)
        {
            if (obj is null)
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            return obj.GetType() == GetType() && Equals((SpaceGroup)obj);
        }

        /// <summary>
        /// Returns true if SpaceGroup instances are equal.
        /// </summary>
        /// <param name="other">Instance of SpaceGroup to be compared.</param>
        /// <returns>Boolean.</returns>
        public bool Equals(SpaceGroup other)
        {
            if (other is null)
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            return
                (
                    SpaceGroupId == other.SpaceGroupId ||
                    SpaceGroupId != null &&
                    SpaceGroupId.Equals(other.SpaceGroupId)
                ) &&
                (
                    Name == other.Name ||
                    Name != null &&
                    Name.Equals(other.Name)
                ) &&
                (
                    Description == other.Description ||
                    Description != null &&
                    Description.Equals(other.Description)
                ) &&
                (
                    Thumbnail == other.Thumbnail ||
                    Thumbnail != null &&
                    Thumbnail.Equals(other.Thumbnail)
                ) &&
                (
                    Status == other.Status ||
                    
                    Status.Equals(other.Status)
                ) &&
                (
                    StartAt == other.StartAt ||
                    StartAt != null &&
                    StartAt.Equals(other.StartAt)
                ) &&
                (
                    EndAt == other.EndAt ||
                    EndAt != null &&
                    EndAt.Equals(other.EndAt)
                ) &&
                (
                    Spaces == other.Spaces ||
                    Spaces != null &&
                    other.Spaces != null &&
                    Spaces.SequenceEqual(other.Spaces)
                );
        }

        /// <summary>
        /// Gets the hash code.
        /// </summary>
        /// <returns>Hash code.</returns>
        public override int GetHashCode()
        {
            var hashCode = default(HashCode);

            hashCode.Add(SpaceGroupId);
            hashCode.Add(Name);
            hashCode.Add(Description);
            hashCode.Add(Thumbnail);
            hashCode.Add(Status);
            hashCode.Add(StartAt);
            hashCode.Add(EndAt);
            hashCode.Add(Spaces);

            return hashCode.ToHashCode();
        }
    }
}
#pragma warning restore