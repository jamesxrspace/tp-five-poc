/*
 * Server API - Room
 *
 * The Restful APIs of Room.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#pragma warning disable
using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace TPFive.OpenApi.GameServer.Model
{
    /// <summary>
    /// 
    /// </summary>
    public class UnregisterRoomUserResponse : BaseResponse, IEquatable<UnregisterRoomUserResponse>
    {
        /// <summary>
        /// Gets or Sets Data
        /// </summary>
        [JsonProperty(PropertyName = "data")]
        public Room Data { get; set; }

        public static bool operator ==(UnregisterRoomUserResponse left, UnregisterRoomUserResponse right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(UnregisterRoomUserResponse left, UnregisterRoomUserResponse right)
        {
            return !Equals(left, right);
        }

        /// <summary>
        /// Returns the JSON string presentation of the object.
        /// </summary>
        /// <returns>JSON string presentation of the object.</returns>
        public override string ToString()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented, JsonUtils.ToStringJsonSerializerSettings);
        }

        /// <summary>
        /// Returns true if objects are equal.
        /// </summary>
        /// <param name="obj">Object to be compared.</param>
        /// <returns>Boolean.</returns>
        public override bool Equals(object obj)
        {
            if (obj is null)
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            return obj.GetType() == GetType() && Equals((UnregisterRoomUserResponse)obj);
        }

        /// <summary>
        /// Returns true if UnregisterRoomUserResponse instances are equal.
        /// </summary>
        /// <param name="other">Instance of UnregisterRoomUserResponse to be compared.</param>
        /// <returns>Boolean.</returns>
        public bool Equals(UnregisterRoomUserResponse other)
        {
            if (other is null)
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            return
                (
                    Data == other.Data ||
                    Data != null &&
                    Data.Equals(other.Data)
                );
        }

        /// <summary>
        /// Gets the hash code.
        /// </summary>
        /// <returns>Hash code.</returns>
        public override int GetHashCode()
        {
            var hashCode = default(HashCode);

            hashCode.Add(Data);

            return hashCode.ToHashCode();
        }
    }
}
#pragma warning restore