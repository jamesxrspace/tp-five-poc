/*
 * Server API - Agora
 *
 * The Restful APIs of Agora.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#pragma warning disable
using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace TPFive.OpenApi.GameServer.Model
{
    /// <summary>
    /// 
    /// </summary>
    public class AgoraStreamingTokenPayload : IEquatable<AgoraStreamingTokenPayload>
    {
        /// <summary>
        /// expire time for token, default is 600 seconds
        /// </summary>
        /// <value>expire time for token, default is 600 seconds</value>
        [JsonProperty(PropertyName = "expires_in")]
        public int ExpiresIn { get; set; }

        /// <summary>
        /// name of the streaming channel [Required]
        /// </summary>
        /// <value>name of the streaming channel</value>
        [JsonProperty(PropertyName = "channel_id")]
        public string ChannelId { get; set; }


        /// <summary>
        /// role of streaming
        /// </summary>
        /// <value>role of streaming</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum RoleEnum
        {
            /// <summary>
            /// Enum Publisher for publisher
            /// </summary>
            [EnumMember(Value = "publisher")]
            Publisher = 1,

            /// <summary>
            /// Enum Subscriber for subscriber
            /// </summary>
            [EnumMember(Value = "subscriber")]
            Subscriber = 2,
        }
        /// <summary>
        /// role of streaming [Required]
        /// </summary>
        /// <value>role of streaming</value>
        [JsonProperty(PropertyName = "role")]
        public RoleEnum Role { get; set; }

        public static bool operator ==(AgoraStreamingTokenPayload left, AgoraStreamingTokenPayload right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(AgoraStreamingTokenPayload left, AgoraStreamingTokenPayload right)
        {
            return !Equals(left, right);
        }

        /// <summary>
        /// Returns the JSON string presentation of the object.
        /// </summary>
        /// <returns>JSON string presentation of the object.</returns>
        public override string ToString()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented, JsonUtils.ToStringJsonSerializerSettings);
        }

        /// <summary>
        /// Returns true if objects are equal.
        /// </summary>
        /// <param name="obj">Object to be compared.</param>
        /// <returns>Boolean.</returns>
        public override bool Equals(object obj)
        {
            if (obj is null)
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            return obj.GetType() == GetType() && Equals((AgoraStreamingTokenPayload)obj);
        }

        /// <summary>
        /// Returns true if AgoraStreamingTokenPayload instances are equal.
        /// </summary>
        /// <param name="other">Instance of AgoraStreamingTokenPayload to be compared.</param>
        /// <returns>Boolean.</returns>
        public bool Equals(AgoraStreamingTokenPayload other)
        {
            if (other is null)
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            return
                (
                    ExpiresIn == other.ExpiresIn ||
                    
                    ExpiresIn.Equals(other.ExpiresIn)
                ) &&
                (
                    ChannelId == other.ChannelId ||
                    ChannelId != null &&
                    ChannelId.Equals(other.ChannelId)
                ) &&
                (
                    Role == other.Role ||
                    
                    Role.Equals(other.Role)
                );
        }

        /// <summary>
        /// Gets the hash code.
        /// </summary>
        /// <returns>Hash code.</returns>
        public override int GetHashCode()
        {
            var hashCode = default(HashCode);

            hashCode.Add(ExpiresIn);
            hashCode.Add(ChannelId);
            hashCode.Add(Role);

            return hashCode.ToHashCode();
        }
    }
}
#pragma warning restore