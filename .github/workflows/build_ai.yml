name: Build AI Image

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      TARGET_BRANCH:
        description: "The target branch"
        default: ""
        type: string

env:
  ECR_REPOSITORY: tp-five/one-ai/edge-server
  ENDPOINT_CONFIG: one-app-develop-edge-server-endpoint-config
  ENDPOINT: edge-server-endpoint-v0-1

jobs:
  build_docker_image:
    name: Build AI Docker Image
    runs-on: ["self-hosted", "g4dn-xlarge"]

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ inputs.TARGET_BRANCH || '' }}

      # Setup
      # ==================================================
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2.2.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1
      - uses: ./one-utility/actions/ecr_image_tag
        id: ecr_image_tag
        with:
          ecr_repository: ${{ env.ECR_REPOSITORY }}
      - name: Build image
        if: ${{ steps.ecr_image_tag.outputs.already_exists == 'false' }}
        env:
          IMAGE_TAG: ${{ steps.ecr_image_tag.outputs.image_tag }}
          ECR_REGISTRY: ${{ steps.ecr_image_tag.outputs.ecr_registry }}
        run: |
          pushd one-ai/edge_server || exit 1

          DOCKER_BUILDKIT=1 docker build -t "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" .

          popd

      # Push and Deploy
      # ==================================================
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.3"
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Push image
        if: ${{ steps.ecr_image_tag.outputs.already_exists == 'false' }}
        env:
          IMAGE_TAG: ${{ steps.ecr_image_tag.outputs.image_tag }}
          ECR_REGISTRY: ${{ steps.ecr_image_tag.outputs.ecr_registry }}
        run: |
          docker push "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
      - name: Deploy to sage maker
        env:
          IMAGE_TAG: ${{ steps.ecr_image_tag.outputs.image_tag }}
        run: |
          pushd infra/terraform/studio || exit 1

          terraform init
          terraform plan -var-file=dev.tfvars -var="edge_server_image_tag=${IMAGE_TAG}"
          terraform apply -auto-approve -var-file=dev.tfvars -var="edge_server_image_tag=${IMAGE_TAG}"
          aws sagemaker update-endpoint --endpoint-name "$ENDPOINT" --endpoint-config-name "$ENDPOINT_CONFIG"

          popd
