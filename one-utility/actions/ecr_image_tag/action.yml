name: The ECR docker image tag helper
description: The ECR docker image tag helper

inputs:
  ecr_repository:
    description: "The AWS ECR repository"
    required: true
  ecr_region:
    description: "The AWS ECR region"
    default: ap-southeast-1

outputs:
  ecr_registry:
    description: "The target ECR registry"
    value: ${{ steps.login-ecr.outputs.registry }}
  image_tag:
    description: "The target docker image tag"
    value: ${{ steps.get_image_tag.outputs.image_tag }}
  already_exists:
    description: "The docker exists in the ECR or not"
    value: ${{ steps.check_image_in_ecr.outputs.exists }}

runs:
  using: "composite"

  steps:
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1.7.0
      with:
          # Setting mask-password to 'true' is the recommended approach if following
          # any of the examples above.
          #
          # ref: https://github.com/aws-actions/amazon-ecr-login#docker-credentials
          mask-password: 'true'
    - name: Get the image tag
      id: get_image_tag
      shell: bash
      run: |
        IMAGE_TAG=$(git rev-parse --short=10 HEAD)
        echo "image_tag=${IMAGE_TAG}" >> "$GITHUB_OUTPUT"
    - name: Check the Image in ECR
      id: check_image_in_ecr
      env:
        ECR_REGISTRY:  ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ inputs.ecr_repository }}
        ECR_REGION: ${{ inputs.ecr_region }}
        IMAGE_TAG: ${{ steps.get_image_tag.outputs.image_tag }}
      shell: bash
      run: |
        if aws ecr describe-images --repository-name "${ECR_REPOSITORY}" --region "${ECR_REGION}" --image-ids "imageTag=${IMAGE_TAG}"; then
            echo "exists=true" >> "$GITHUB_OUTPUT"
        else
            echo "exists=false" >> "$GITHUB_OUTPUT"
        fi

        exit 0
