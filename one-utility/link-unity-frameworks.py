#! /usr/bin/env python3
"""
This is the utility script that links the Unity frameworks into the
Unity-iPhone project.
"""
from typing import Generator
from pathlib import Path
from pbxproj import XcodeProject
from pbxproj.pbxextensions.ProjectFiles import FileOptions

BASE_DIR = Path(__file__).resolve().parent.parent


def list_all_unity_frameworks() -> Generator[Path, None, None]:
    """
    List all the frameworks absolute path generated by Flutter-Unity-Widget.
    """
    path = BASE_DIR / "one-unity/unity-project/development/complete-unity"
    path = path / "exposed_flutter_unity_widget/ios/UnityLibrary"

    yield from path.glob("**/*.framework")


def patch_the_link_frameworks():
    pbxproj = BASE_DIR / "one-mobile/flutter_project/ios/Runner.xcodeproj/project.pbxproj"  # noqa: E501
    project = XcodeProject.load(pbxproj)

    for path in list_all_unity_frameworks():
        # Sometimes xcode complained about linking the frameworks
        # for different platforms. Filter out non-revelant frameworks here.
        if 'tvos-' in str(path):
            continue
        if 'macos-' in str(path):
            continue
        if '-maccatalyst' in str(path):
            continue

        # NOTE the Sentry framework may generate the simulator version and
        # device version, we only need the device version.
        if '-simulator' in str(path):
            continue

        frameworks = project.get_files_by_name(path.name)
        if frameworks:
            # already add the framework
            continue

        file_options = FileOptions(weak=False, embed_framework=True)
        project.add_file(path, force=False, file_options=file_options)
        print(f"add extra framework {str(path)=}")

    # save the project, otherwise your changes won't be picked up by Xcode
    project.save()


def main():
    patch_the_link_frameworks()


if __name__ == '__main__':
    main()
