using System.Collections.Generic;
using System.Text;

namespace TPFive.SCG.ServiceEco.CodeGen.RegisterToContainer
{
    internal static class CodeGenerator
    {
        public static string Generate(
            ClassModel model,
            int scope)
        {
            var scopeString = "Lifetime.Transient";
            if (scope == 1)
            {
                scopeString = "Lifetime.Singleton";
            }
            else if (scope == 2)
            {
                scopeString = "Lifetime.Scoped";
            }

            var output = $@"
// <auto-generated />

using MessagePipe;
using VContainer;
using VContainer.Unity;

namespace {model.Namespace}
{{
    /// <summary>
    /// This part deals with installing the service to the container.
    /// </summary>
    public class Installer :
        IInstaller
    {{
        /// <summary>
        /// The options for the message pipe.
        /// </summary>
        private readonly MessagePipeOptions _messagePipeOptions;

        public Installer(MessagePipeOptions messagePipeOptions)
        {{
            _messagePipeOptions = messagePipeOptions;
        }}

        /// <summary>
        /// Install the service to the container.
        /// </summary>
        public void Install(IContainerBuilder builder)
        {{
            // Register references related to service.
            builder.Register<Service>({scopeString}).As<IService>();

            // Register references related to message.
        }}
    }}
}}
";

            return output;
        }
    }
}
