using System.Collections.Generic;
using System.Linq;
using System.Text;
using Microsoft.CodeAnalysis.CSharp.Syntax;

namespace TPFive.SCG.ServiceEco.CodeGen.RegisterService
{
    internal static class CodeGenerator
    {
        public static string Generate(
            ClassModel model,
            string serviceList,
            List<string> theList)
        {
            var output = $@"
// <auto-generated />

using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;
using MessagePipe;
using UnityEngine;
using VContainer;
using VContainer.Unity;

namespace {model.Namespace}
{{
    /// <summary>
    /// This part deals with installing the service to the container.
    /// </summary>
    {model.Modifier} class {model.Name}
    {{
        partial void RegisterInstallers(IContainerBuilder builder, MessagePipeOptions options)
        {{
";

            if (!string.IsNullOrEmpty(serviceList))
            {
                serviceList
                    .Split(',')
                    .Select(x => x.Trim())
                    .ToList()
                    .ForEach(x =>
                    {
                        var code = $@"
            // Register Installer of {x}
            {{
                var installer = new {x.Replace(".Service", "")}.Installer(options);
                installer.Install(builder);
            }}
";
                        output = $"{output}{code}";
                    });
            }

            var endMethod = $@"
        }}
    }}
}}
";
            output = $"{output}{endMethod}";

            return output;
        }
    }
}
