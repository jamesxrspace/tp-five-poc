/* tslint:disable */
/* eslint-disable */
/**
 * Server API - Login
 * The Restful APIs of Login.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface DailyBuild
 */
export interface DailyBuild {
  /**
   *
   * @type {string}
   * @memberof DailyBuild
   */
  key?: string;
  /**
   *
   * @type {Date}
   * @memberof DailyBuild
   */
  date?: Date;
  /**
   *
   * @type {string}
   * @memberof DailyBuild
   */
  buildType?: DailyBuildBuildTypeEnum;
  /**
   *
   * @type {string}
   * @memberof DailyBuild
   */
  url?: string;
  /**
   *
   * @type {string}
   * @memberof DailyBuild
   */
  filePath?: string;
}

/**
 * @export
 */
export const DailyBuildBuildTypeEnum = {
  Apk: 'apk',
  VrApk: 'vr-apk',
} as const;
export type DailyBuildBuildTypeEnum =
  (typeof DailyBuildBuildTypeEnum)[keyof typeof DailyBuildBuildTypeEnum];

/**
 * Check if a given object implements the DailyBuild interface.
 */
export function instanceOfDailyBuild(value: object): boolean {
  let isInstance = true;

  return isInstance;
}

export function DailyBuildFromJSON(json: any): DailyBuild {
  return DailyBuildFromJSONTyped(json, false);
}

export function DailyBuildFromJSONTyped(json: any, ignoreDiscriminator: boolean): DailyBuild {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    key: !exists(json, 'key') ? undefined : json['key'],
    date: !exists(json, 'date') ? undefined : new Date(json['date']),
    buildType: !exists(json, 'build_type') ? undefined : json['build_type'],
    url: !exists(json, 'url') ? undefined : json['url'],
    filePath: !exists(json, 'file_path') ? undefined : json['file_path'],
  };
}

export function DailyBuildToJSON(value?: DailyBuild | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    key: value.key,
    date: value.date === undefined ? undefined : value.date.toISOString(),
    build_type: value.buildType,
    url: value.url,
    file_path: value.filePath,
  };
}
