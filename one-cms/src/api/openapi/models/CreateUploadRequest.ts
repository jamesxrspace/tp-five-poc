/* tslint:disable */
/* eslint-disable */
/**
 * Server API - Login
 * The Restful APIs of Login.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CategoriesEnum } from './CategoriesEnum';
import {
  CategoriesEnumFromJSON,
  CategoriesEnumFromJSONTyped,
  CategoriesEnumToJSON,
} from './CategoriesEnum';
import type { UploadFile } from './UploadFile';
import { UploadFileFromJSON, UploadFileFromJSONTyped, UploadFileToJSON } from './UploadFile';

/**
 *
 * @export
 * @interface CreateUploadRequest
 */
export interface CreateUploadRequest {
  /**
   * upload asset tags
   * @type {Array<string>}
   * @memberof CreateUploadRequest
   */
  tags?: Array<string>;
  /**
   * upload asset type
   * @type {string}
   * @memberof CreateUploadRequest
   */
  type?: string;
  /**
   * upload asset categories
   * @type {Array<CategoriesEnum>}
   * @memberof CreateUploadRequest
   */
  categories?: Array<CategoriesEnum>;
  /**
   * upload files information
   * @type {Array<UploadFile>}
   * @memberof CreateUploadRequest
   */
  files: Array<UploadFile>;
}

/**
 * Check if a given object implements the CreateUploadRequest interface.
 */
export function instanceOfCreateUploadRequest(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && 'files' in value;

  return isInstance;
}

export function CreateUploadRequestFromJSON(json: any): CreateUploadRequest {
  return CreateUploadRequestFromJSONTyped(json, false);
}

export function CreateUploadRequestFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): CreateUploadRequest {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    tags: !exists(json, 'tags') ? undefined : json['tags'],
    type: !exists(json, 'type') ? undefined : json['type'],
    categories: !exists(json, 'categories')
      ? undefined
      : (json['categories'] as Array<any>).map(CategoriesEnumFromJSON),
    files: (json['files'] as Array<any>).map(UploadFileFromJSON),
  };
}

export function CreateUploadRequestToJSON(value?: CreateUploadRequest | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    tags: value.tags,
    type: value.type,
    categories:
      value.categories === undefined
        ? undefined
        : (value.categories as Array<any>).map(CategoriesEnumToJSON),
    files: (value.files as Array<any>).map(UploadFileToJSON),
  };
}
