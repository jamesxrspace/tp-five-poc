/* tslint:disable */
/* eslint-disable */
/**
 * Server API - Login
 * The Restful APIs of Login.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from '../runtime';
import type { BaseResponse, GetProfileResponse } from '../models/index';
import {
  BaseResponseFromJSON,
  BaseResponseToJSON,
  GetProfileResponseFromJSON,
  GetProfileResponseToJSON,
} from '../models/index';

/**
 *
 */
export class LoginApi extends runtime.BaseAPI {
  /**
   * Get user profile.
   */
  async getUserProfileRaw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<GetProfileResponse>> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    if (this.configuration && this.configuration.accessToken) {
      const token = this.configuration.accessToken;
      const tokenString = await token('BearerAuth', []);

      if (tokenString) {
        headerParameters['Authorization'] = `Bearer ${tokenString}`;
      }
    }
    const response = await this.request(
      {
        path: `/api/v1/account/profile`,
        method: 'GET',
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      GetProfileResponseFromJSON(jsonValue),
    );
  }

  /**
   * Get user profile.
   */
  async getUserProfile(
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<GetProfileResponse> {
    const response = await this.getUserProfileRaw(initOverrides);
    return await response.value();
  }

  /**
   * Login game server.
   */
  async postLoginRaw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<BaseResponse>> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    if (this.configuration && this.configuration.accessToken) {
      const token = this.configuration.accessToken;
      const tokenString = await token('BearerAuth', []);

      if (tokenString) {
        headerParameters['Authorization'] = `Bearer ${tokenString}`;
      }
    }
    const response = await this.request(
      {
        path: `/api/v1/account/login`,
        method: 'POST',
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse(response, (jsonValue) => BaseResponseFromJSON(jsonValue));
  }

  /**
   * Login game server.
   */
  async postLogin(
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<BaseResponse> {
    const response = await this.postLoginRaw(initOverrides);
    return await response.value();
  }
}
